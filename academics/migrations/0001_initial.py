# Generated by Django 5.2.3 on 2025-07-05 04:47

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="AcademicDepartment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
            options={
                "verbose_name": "Academic Department",
                "verbose_name_plural": "Academic Departments",
                "ordering": ["-academic_year__start_date", "department__name"],
            },
        ),
        migrations.CreateModel(
            name="AcademicYear",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("start_date", models.DateField(unique=True)),
                ("end_date", models.DateField(unique=True)),
                ("is_current", models.BooleanField(default=False)),
            ],
            options={
                "verbose_name": "Academic Year",
                "verbose_name_plural": "Academic Years",
                "ordering": ["-start_date"],
            },
        ),
        migrations.CreateModel(
            name="Assessment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="e.g., Midterm Exam - Unit 1, Assignment 2 - Loops",
                        max_length=200,
                    ),
                ),
                (
                    "max_marks",
                    models.DecimalField(
                        decimal_places=0,
                        help_text="Maximum marks for this assessment",
                        max_digits=5,
                    ),
                ),
                (
                    "date",
                    models.DateField(help_text="Date the assessment was conducted/due"),
                ),
            ],
            options={
                "verbose_name": "Assessment",
                "verbose_name_plural": "Assessments",
                "ordering": ["-academic_year__start_date", "course__code", "date"],
            },
        ),
        migrations.CreateModel(
            name="AssessmentType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="e.g., Midterm Exam, Assignment, Project, Quiz",
                        max_length=100,
                        unique=True,
                    ),
                ),
            ],
            options={
                "verbose_name": "Assessment Type",
                "verbose_name_plural": "Assessment Types",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Assignment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "assignment_type",
                    models.CharField(
                        choices=[
                            ("pdf_upload", "PDF/File Upload"),
                            ("rubric_based", "Rubric-Based Assessment"),
                        ],
                        default="pdf_upload",
                        max_length=20,
                    ),
                ),
                ("due_date", models.DateTimeField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "max_marks",
                    models.DecimalField(
                        decimal_places=0,
                        default=0,
                        help_text="The maximum marks for this assignment.",
                        max_digits=6,
                    ),
                ),
            ],
            options={
                "ordering": ["-due_date"],
            },
        ),
        migrations.CreateModel(
            name="CIAComponent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "component_name",
                    models.CharField(
                        help_text="e.g., CIA-I Test (10 Marks), CIA-II Assignment (5 Marks)",
                        max_length=200,
                    ),
                ),
                (
                    "units_covered",
                    models.CharField(
                        blank=True,
                        help_text="e.g., UNIT 1 & 2",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "order",
                    models.PositiveIntegerField(
                        default=0, help_text="Order of the CIA component."
                    ),
                ),
                (
                    "evaluation_rubric",
                    models.TextField(
                        blank=True,
                        help_text="Descriptive rubric for this component (e.g., criteria for Content, Neatness).",
                        null=True,
                    ),
                ),
            ],
            options={
                "verbose_name": "CIA Component",
                "verbose_name_plural": "CIA Components",
                "ordering": ["order"],
            },
        ),
        migrations.CreateModel(
            name="COPOMapping",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "correlation_level",
                    models.IntegerField(
                        choices=[(0, "None"), (1, "Low"), (2, "Medium"), (3, "High")],
                        default=0,
                    ),
                ),
            ],
            options={
                "verbose_name": "CO-PO Mapping",
                "verbose_name_plural": "CO-PO Mappings",
                "ordering": ["course_outcome__code", "program_outcome__code"],
            },
        ),
        migrations.CreateModel(
            name="Course",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                (
                    "code",
                    models.CharField(
                        help_text="e.g., CS101, BA203", max_length=50, unique=True
                    ),
                ),
                (
                    "course_type",
                    models.CharField(
                        choices=[
                            ("THEORY", "Theory"),
                            ("PRACTICAL", "Practical"),
                            ("INTEGRATED", "Integrated"),
                        ],
                        default="THEORY",
                        help_text="The type of the course, e.g., Theory or Practical",
                        max_length=20,
                    ),
                ),
                (
                    "credits",
                    models.PositiveIntegerField(
                        default=4, help_text="Number of credits for the course"
                    ),
                ),
                (
                    "prerequisites",
                    models.TextField(
                        blank=True,
                        help_text="Knowledge or skills required before taking this course",
                        null=True,
                    ),
                ),
            ],
            options={
                "verbose_name": "Course",
                "verbose_name_plural": "Courses",
                "ordering": [
                    "semester__academic_department__academic_year__start_date",
                    "semester__order",
                    "code",
                ],
            },
        ),
        migrations.CreateModel(
            name="CourseObjective",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "unit_number",
                    models.CharField(
                        blank=True,
                        help_text="e.g., 1, 2, Unit A, Unit B",
                        max_length=10,
                        null=True,
                    ),
                ),
                (
                    "objective_text",
                    models.TextField(
                        help_text="Detailed description of the course objective."
                    ),
                ),
                (
                    "order",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Order of the objective within the Course Plan",
                    ),
                ),
            ],
            options={
                "verbose_name": "Course Objective (Plan)",
                "verbose_name_plural": "Course Objectives (Plan)",
                "ordering": ["order"],
            },
        ),
        migrations.CreateModel(
            name="CourseOutcome",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("code", models.CharField(help_text="e.g., CO1, CO2", max_length=20)),
                ("description", models.TextField()),
                (
                    "rbt_level_1",
                    models.BooleanField(default=False, verbose_name="RBT 1 (Remember)"),
                ),
                (
                    "rbt_level_2",
                    models.BooleanField(
                        default=False, verbose_name="RBT 2 (Understand)"
                    ),
                ),
                (
                    "rbt_level_3",
                    models.BooleanField(default=False, verbose_name="RBT 3 (Apply)"),
                ),
                (
                    "rbt_level_4",
                    models.BooleanField(default=False, verbose_name="RBT 4 (Analyze)"),
                ),
                (
                    "rbt_level_5",
                    models.BooleanField(default=False, verbose_name="RBT 5 (Evaluate)"),
                ),
                (
                    "rbt_level_6",
                    models.BooleanField(default=False, verbose_name="RBT 6 (Create)"),
                ),
            ],
            options={
                "verbose_name": "Course Outcome",
                "verbose_name_plural": "Course Outcomes",
                "ordering": ["course__code", "code"],
            },
        ),
        migrations.CreateModel(
            name="CourseOutcomeAttainment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "attainment_percentage",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
            ],
            options={
                "verbose_name": "Course Outcome Attainment",
                "verbose_name_plural": "Course Outcome Attainments",
                "ordering": [
                    "academic_year__start_date",
                    "course_outcome__course__code",
                    "course_outcome__code",
                ],
            },
        ),
        migrations.CreateModel(
            name="Department",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
            ],
            options={
                "verbose_name": "Department",
                "verbose_name_plural": "Departments",
            },
        ),
        migrations.CreateModel(
            name="ProgramOutcome",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("code", models.CharField(help_text="e.g., PO1, PO2", max_length=20)),
                ("description", models.TextField()),
            ],
            options={
                "verbose_name": "Program Outcome",
                "verbose_name_plural": "Program Outcomes",
                "ordering": ["department__name", "code"],
            },
        ),
        migrations.CreateModel(
            name="ProgramOutcomeAttainment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "attainment_percentage",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
            ],
            options={
                "verbose_name": "Program Outcome Attainment",
                "verbose_name_plural": "Program Outcome Attainments",
                "ordering": ["academic_year__start_date", "program_outcome__code"],
            },
        ),
        migrations.CreateModel(
            name="Rubric",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="RubricCriterion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "criterion_text",
                    models.CharField(
                        help_text="e.g., 'Clarity and Organization'", max_length=500
                    ),
                ),
                ("max_score", models.PositiveIntegerField(default=5)),
                ("order", models.PositiveIntegerField(default=0)),
            ],
            options={
                "ordering": ["order"],
            },
        ),
        migrations.CreateModel(
            name="RubricScore",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("score", models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name="Semester",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="e.g., 1st Semester, Spring 2024", max_length=100
                    ),
                ),
                (
                    "order",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Order of the semester within the academic year",
                    ),
                ),
            ],
            options={
                "verbose_name": "Semester",
                "verbose_name_plural": "Semesters",
                "ordering": [
                    "-academic_department__academic_year__start_date",
                    "order",
                ],
            },
        ),
        migrations.CreateModel(
            name="StudentMark",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "marks_obtained",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Marks obtained by the student",
                        max_digits=5,
                    ),
                ),
            ],
            options={
                "verbose_name": "Student Mark",
                "verbose_name_plural": "Student Marks",
                "ordering": ["assessment__date", "student__username"],
            },
        ),
        migrations.CreateModel(
            name="Submission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("submitted_at", models.DateTimeField(auto_now_add=True)),
                (
                    "file",
                    models.FileField(blank=True, null=True, upload_to="%Y/%m/%d/"),
                ),
                (
                    "marks_obtained",
                    models.DecimalField(
                        blank=True, decimal_places=0, max_digits=5, null=True
                    ),
                ),
                ("feedback", models.TextField(blank=True, null=True)),
                ("graded_at", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "ordering": ["-submitted_at"],
            },
        ),
        migrations.CreateModel(
            name="WeeklyLessonPlan",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "unit_number",
                    models.CharField(help_text="e.g., I, II, Unit 1", max_length=10),
                ),
                (
                    "unit_details",
                    models.TextField(help_text="Topics covered in this unit/week."),
                ),
                (
                    "start_date",
                    models.DateField(
                        blank=True,
                        help_text="Start date for the weekly plan",
                        null=True,
                    ),
                ),
                (
                    "end_date",
                    models.DateField(
                        blank=True, help_text="End date for the weekly plan", null=True
                    ),
                ),
                (
                    "pedagogy",
                    models.TextField(
                        blank=True,
                        help_text="Methods used for teaching (e.g., Lecture, Demo, Activity-Based Learning).",
                        null=True,
                    ),
                ),
                (
                    "references",
                    models.TextField(
                        blank=True,
                        help_text="Textbooks, web links for this unit.",
                        null=True,
                    ),
                ),
                (
                    "order",
                    models.PositiveIntegerField(
                        default=0, help_text="Order of the weekly plan entry."
                    ),
                ),
            ],
            options={
                "verbose_name": "Weekly Lesson Plan",
                "verbose_name_plural": "Weekly Lesson Plans",
                "ordering": ["order"],
            },
        ),
    ]
